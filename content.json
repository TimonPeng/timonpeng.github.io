{"meta":{"title":"Timon's Blog","subtitle":null,"description":null,"author":"Timon Peng","url":"https://timonpeng.com","root":"/"},"pages":[{"title":"","date":"2019-07-28T14:27:50.806Z","updated":"2019-07-28T06:26:50.000Z","comments":true,"path":"manifest.json","permalink":"https://timonpeng.com/manifest.json","excerpt":"","text":"{\"name\":\"App\",\"icons\":[{\"src\":\"/android-icon-36x36.png\",\"sizes\":\"36x36\",\"type\":\"image/png\",\"density\":\"0.75\"},{\"src\":\"/android-icon-48x48.png\",\"sizes\":\"48x48\",\"type\":\"image/png\",\"density\":\"1.0\"},{\"src\":\"/android-icon-72x72.png\",\"sizes\":\"72x72\",\"type\":\"image/png\",\"density\":\"1.5\"},{\"src\":\"/android-icon-96x96.png\",\"sizes\":\"96x96\",\"type\":\"image/png\",\"density\":\"2.0\"},{\"src\":\"/android-icon-144x144.png\",\"sizes\":\"144x144\",\"type\":\"image/png\",\"density\":\"3.0\"},{\"src\":\"/android-icon-192x192.png\",\"sizes\":\"192x192\",\"type\":\"image/png\",\"density\":\"4.0\"}]}"},{"title":"Links","date":"2019-07-28T13:37:04.385Z","updated":"2019-07-28T13:37:04.385Z","comments":false,"path":"links/index.html","permalink":"https://timonpeng.com/links/index.html","excerpt":"","text":""},{"title":"","date":"2019-07-27T02:12:02.289Z","updated":"2019-07-27T02:12:02.289Z","comments":false,"path":"tags/index.html","permalink":"https://timonpeng.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Tips of pyinstaller executable file decompilation","slug":"tips-of-pyinstaller-executable-file-decompilation","date":"2020-03-11T07:00:00.000Z","updated":"2020-03-11T10:36:37.248Z","comments":true,"path":"tips-of-pyinstaller-executable-file-decompilation/","link":"","permalink":"https://timonpeng.com/tips-of-pyinstaller-executable-file-decompilation/","excerpt":"","text":"The articles on the Internet are all relatively old. Tips should be noted: Python2.x and Python3.x have different length magic number. fix main program file use struct file contents, not fixed magic number. Extract pyc file1234567891011# downloadgit clone https://github.com/pyinstaller/pyinstaller.gitcd pyinstaller/# unnecessarypyenv local 3.6.9virtualenv venvsource ./venv/bin/activate# installpython setup.py develop 1python PyInstaller/utils/cliutils/archive_viewer.py /path/your-executable-file There are 4 commands available: 1234U: go Up one levelO &lt;name&gt;: open embedded archive nameX &lt;name&gt;: extract nameQ: quit Extract main program file and struct file. Fix main file headerYou can see the Python version through struct file also: 1234567891011121314151617181920212223$ xxd &lt; struct.pyc00000000: 160d 0d0a 7079 6930 0101 0000 e300 0000 ....pyi0........00000010: 0000 0000 0000 0000 0008 0000 0040 0000 .............@..00000020: 0073 4c00 0000 6400 0064 0100 6402 0064 .sL...d..d..d..d00000030: 0300 6404 0064 0500 6406 0064 0700 6708 ..d..d..d..d..g.00000040: 005a 0000 6408 0064 0900 6c01 0054 6408 .Z..d..d..l..Td.00000050: 0064 0a00 6c01 006d 0200 5a02 0001 6408 .d..l..m..Z...d.00000060: 0064 0b00 6c01 006d 0300 5a03 0001 640c .d..l..m..Z...d.00000070: 0053 290d da08 6361 6c63 7369 7a65 da04 .S)...calcsize..00000080: 7061 636b da09 7061 636b 5f69 6e74 6fda pack..pack_into.00000090: 0675 6e70 6163 6bda 0b75 6e70 6163 6b5f .unpack..unpack_000000a0: 6672 6f6d da0b 6974 6572 5f75 6e70 6163 from..iter_unpac000000b0: 6bda 0653 7472 7563 74da 0565 7272 6f72 k..Struct..error000000c0: e900 0000 0029 01da 012a 2901 da0b 5f63 .....)...*)..._c000000d0: 6c65 6172 6361 6368 6529 01da 075f 5f64 learcache)...__d000000e0: 6f63 5f5f 4e29 04da 075f 5f61 6c6c 5f5f oc__N)...__all__000000f0: da07 5f73 7472 7563 7472 0b00 0000 720c .._structr....r.00000100: 0000 00a9 0072 0f00 0000 720f 0000 00fa .....r....r.....00000110: 1c2f 7573 722f 6c69 622f 7079 7468 6f6e ./usr/lib/python00000120: 332e 352f 7374 7275 6374 2e70 79da 083c 3.5/struct.py..&lt;00000130: 6d6f 6475 6c65 3e03 0000 0073 0c00 0000 module&gt;....s....00000140: 0f01 0303 0303 0903 0a01 1001 ............ View main program file head: 123456$ xxd &lt; t.pyc00000000: e300 0000 0000 0000 0000 0000 0009 0000 ................00000010: 0040 0000 0073 6502 0000 6400 0064 0100 .@...se...d..d..00000020: 6c00 006d 0100 5a01 0001 6400 0064 0200 l..m..Z...d..d..00000030: 6c02 005a 0200 6400 0064 0200 6c03 005a l..Z..d..d..l..Z You can find that the first byte of the main program is e3, therefore, the contents before e3 in the struct file are filled to the front of the main program file. It is 12 bytes(160d 0d0a 7079 6930 0101 0000) in the example, not 8 bytes on many old articles. So donâ€™t use fixed length!!! View your struct file header!!! Uncompyle pyc file12pip install uncompyle6uncompyle6 main.pyc &gt; main.py Well done!","categories":[],"tags":[{"name":"Reverse engineering","slug":"Reverse-engineering","permalink":"https://timonpeng.com/tags/Reverse-engineering/"},{"name":"Python","slug":"Python","permalink":"https://timonpeng.com/tags/Python/"}]},{"title":"DJI RoboMaster S1 analyses","slug":"dji-robomaster-s1-analyses","date":"2019-09-08T07:00:00.000Z","updated":"2019-09-09T01:41:51.008Z","comments":true,"path":"dji-robomaster-s1-analyses/","link":"","permalink":"https://timonpeng.com/dji-robomaster-s1-analyses/","excerpt":"","text":"NetworkTCP Ports 21 Anonymous login FTP 8905 Unknown 8906 Unknown 8907 Unknown 8910 Unknown 8909 Unknown 8912 Unknown 8913 Unknown 8916 States logger FTPSome .DAT files in the directorys. TCP/8916 UDP Ports 10607 Heartbeat? UDP/10607request 308088630000005b401c64006400c005140000640064006400c005140000640014006400c00514000064000101040102 response 09801624000000bb01 FirmwareVersion Filexw607_0000_v00.05.0028_20190726.pro.cfg.sig 123456789101112131415161718192021222324252627&lt;dji&gt; &lt;device id=&quot;xw607&quot;&gt; &lt;firmware formal=&quot;00.05.0028&quot;&gt; &lt;release version=&quot;00.05.0028&quot; antirollback=&quot;0&quot; antirollback_ext=&quot;cn:0&quot; enforce=&quot;0&quot; enforce_ext=&quot;cn:0&quot; enforce_time=&quot;2019-07-26T04:02:40+00:00&quot; from=&quot;2019/07/26&quot; expire=&quot;2020/07/26&quot;&gt; &lt;module id=&quot;0801&quot; version=&quot;00.11.06.02&quot; type=&quot;&quot; group=&quot;&quot; size=&quot;118774688&quot; md5=&quot;69fc57d22e4e45da705511eb120239ac&quot;&gt;xw607_0801_v00.11.06.02_20190726.pro.fw.sig&lt;/module&gt; &lt;module id=&quot;0805&quot; version=&quot;01.01.01.90&quot; type=&quot;&quot; group=&quot;&quot; size=&quot;2785760&quot; md5=&quot;4ddd99570a2be009614f01e3ddf7edb2&quot;&gt;xw607_0805_v01.01.01.90_20190624.pro.fw.sig&lt;/module&gt; &lt;module id=&quot;1100&quot; version=&quot;03.74.05.07&quot; type=&quot;&quot; group=&quot;&quot; size=&quot;89984&quot; md5=&quot;f5ce50d2ccdf61f1acd84c3048be514c&quot;&gt;xw607_1100_v03.74.05.07_20181024.pro.fw.sig&lt;/module&gt; &lt;module id=&quot;0902&quot; version=&quot;00.18.11.29&quot; type=&quot;&quot; group=&quot;&quot; size=&quot;16256&quot; md5=&quot;dcba41f344a82ebf145f8cd278d02b67&quot;&gt;xw607_0902_v00.18.11.29_20181129.pro.fw.sig&lt;/module&gt; &lt;module id=&quot;0306&quot; version=&quot;01.03.22.03&quot; type=&quot;hw02&quot; group=&quot;&quot; size=&quot;480288&quot; md5=&quot;7d7bc2941a6e045c8e18b518d155942e&quot;&gt;xw607_0306_v01.03.22.03_20190724_hw02.pro.fw.sig&lt;/module&gt; &lt;module id=&quot;1200&quot; version=&quot;01.02.01.12&quot; type=&quot;hw02&quot; group=&quot;&quot; size=&quot;31264&quot; md5=&quot;13d734493c59105109c723fcaa27582e&quot;&gt;xw607_1200_v01.02.01.12_20190512_hw02.pro.fw.sig&lt;/module&gt; &lt;module id=&quot;1201&quot; version=&quot;01.02.01.12&quot; type=&quot;hw02&quot; group=&quot;&quot; size=&quot;31264&quot; md5=&quot;e27f0bd66db04d11ee4c5a7e5e53545d&quot;&gt;xw607_1201_v01.02.01.12_20190512_hw02.pro.fw.sig&lt;/module&gt; &lt;module id=&quot;1202&quot; version=&quot;01.02.01.12&quot; type=&quot;hw02&quot; group=&quot;&quot; size=&quot;31264&quot; md5=&quot;ced740fbbb352ef137a92438ce444e63&quot;&gt;xw607_1202_v01.02.01.12_20190512_hw02.pro.fw.sig&lt;/module&gt; &lt;module id=&quot;1203&quot; version=&quot;01.02.01.12&quot; type=&quot;hw02&quot; group=&quot;&quot; size=&quot;31264&quot; md5=&quot;e77f5d4481fa8719fa1309290996ef54&quot;&gt;xw607_1203_v01.02.01.12_20190512_hw02.pro.fw.sig&lt;/module&gt; &lt;module id=&quot;2401&quot; version=&quot;00.05.11.00&quot; type=&quot;hw02&quot; group=&quot;&quot; size=&quot;20000&quot; md5=&quot;4160895a80b82142c5f676e8263526d0&quot;&gt;xw607_2401_v00.05.11.00_20190505_hw02.pro.fw.sig&lt;/module&gt; &lt;module id=&quot;2402&quot; version=&quot;00.05.11.00&quot; type=&quot;hw02&quot; group=&quot;&quot; size=&quot;20000&quot; md5=&quot;a51c35e9ff686adcbc563da6968ce35a&quot;&gt;xw607_2402_v00.05.11.00_20190505_hw02.pro.fw.sig&lt;/module&gt; &lt;module id=&quot;2403&quot; version=&quot;00.05.11.00&quot; type=&quot;hw02&quot; group=&quot;&quot; size=&quot;20000&quot; md5=&quot;fc85ff20ff4a6575288cf0c1a146d5f3&quot;&gt;xw607_2403_v00.05.11.00_20190505_hw02.pro.fw.sig&lt;/module&gt; &lt;module id=&quot;2404&quot; version=&quot;00.05.11.00&quot; type=&quot;hw02&quot; group=&quot;&quot; size=&quot;20000&quot; md5=&quot;8219e9b49503002d88a81815d1f2a706&quot;&gt;xw607_2404_v00.05.11.00_20190505_hw02.pro.fw.sig&lt;/module&gt; &lt;module id=&quot;2405&quot; version=&quot;00.05.11.00&quot; type=&quot;hw02&quot; group=&quot;&quot; size=&quot;20000&quot; md5=&quot;aea323ef23b3abd30f95a6fab33e653a&quot;&gt;xw607_2405_v00.05.11.00_20190505_hw02.pro.fw.sig&lt;/module&gt; &lt;module id=&quot;2406&quot; version=&quot;00.05.11.00&quot; type=&quot;hw02&quot; group=&quot;&quot; size=&quot;20000&quot; md5=&quot;d3853f1d02cb327a52d524b297c5b208&quot;&gt;xw607_2406_v00.05.11.00_20190505_hw02.pro.fw.sig&lt;/module&gt; &lt;module id=&quot;2300&quot; version=&quot;00.01.04.44&quot; type=&quot;hw03&quot; group=&quot;&quot; size=&quot;21024&quot; md5=&quot;22a9d5c54de7fc30d502fd96358408dd&quot;&gt;xw607_2300_v00.01.04.44_20190712_hw03.pro.fw.sig&lt;/module&gt; &lt;module id=&quot;0401&quot; version=&quot;17.33.00.24&quot; type=&quot;hw01&quot; group=&quot;&quot; size=&quot;30752&quot; md5=&quot;9a01df66a01883e8f0200b37e8c03412&quot;&gt;xw607_0401_v17.33.00.24_20190104_hw01.pro.fw.sig&lt;/module&gt; &lt;module id=&quot;0400&quot; version=&quot;00.02.12.66&quot; type=&quot;&quot; group=&quot;&quot; size=&quot;378912&quot; md5=&quot;4592ad30d086187c9915f5aa42b9a6c1&quot;&gt;xw607_0400_v00.02.12.66_20190716.pro.fw.sig&lt;/module&gt; &lt;module id=&quot;0600&quot; version=&quot;00.19.03.19&quot; type=&quot;&quot; group=&quot;rc&quot; size=&quot;76832&quot; md5=&quot;a0c199d147e4af928bc367c518698471&quot;&gt;xw607_0600_v00.19.03.19_20190319.pro.fw.sig&lt;/module&gt; &lt;/release&gt; &lt;/firmware&gt; &lt;/device&gt;&lt;/dji&gt;","categories":[],"tags":[{"name":"Hardware","slug":"Hardware","permalink":"https://timonpeng.com/tags/Hardware/"}]},{"title":"Reverse engineering GL iNet MiFi router","slug":"reverse-engineering-gl-inet-mifi-router","date":"2019-07-25T07:00:00.000Z","updated":"2019-07-28T11:07:23.993Z","comments":true,"path":"reverse-engineering-gl-inet-mifi-router/","link":"","permalink":"https://timonpeng.com/reverse-engineering-gl-inet-mifi-router/","excerpt":"A few days ago, my friend from Beijing sent me a GL-MiFi 4G router. It uses custom developed firmware(based on OpenWrt, of course) to implement some functions. So we want to view its code and how it implements some functions.","text":"A few days ago, my friend from Beijing sent me a GL-MiFi 4G router. It uses custom developed firmware(based on OpenWrt, of course) to implement some functions. So we want to view its code and how it implements some functions. Scan portsI used nmap to scan its ports and found that 53, 80 and some custom service ports(I confirmed that they are some http services) were opened. Web interfaceSSH and telnet have not been opened, so I decided to check the web interface. However, only some basic state and networking setting operation pages here. Sniffing upgrade host urlAt that time, the online upgrade function caught my attention. So I decided to sniffing the upgrade url to get the firmware file. I connected GL-MiFi to another RT-AC86U router: Internet &lt;-&gt; RT-AC86U &lt;-&gt; GL-MiFi and run tcpdump on RT-AC86U, then use Wireshark, I got the upgrade host ip. Then I forwarded all the original traffic to my ip on RT-AC86U. 1iptables -A PREROUTING -p tcp -m tcp -j DNAT -d ORIGINAL-IP --match multiport --dports 80,443 --to-destination MY-IP nat I can see the request urls now. So I wrote a small Flask app to handle all url and response fake data of upgrade request. 1234version=10.0date=2019-7-25filename=upgrade_10.0.binmd5=xxxxxx Now I have the url path of the firmware files and downloaded them. View firmwareI used binwalk upgrade.bin | head to check firmware file but got nothing. Then I converted it into HEX string xxd &lt; upgrade.bin | more, after viewing, I think it is an encrypted file. Usually unencrypted firmware files have some features: The first 64 bytes of the file header is 2705 1956, a U-Boot header An operating system string after the U-Boot image header Part of the blank blocks(0xFF) is at the end You can view the U-Boot image header code on GitHub 1234567891011121314typedef struct image_header &#123; uint32_t ih_magic; /* Image Header Magic Number */ uint32_t ih_hcrc; /* Image Header CRC Checksum */ uint32_t ih_time; /* Image Creation Timestamp */ uint32_t ih_size; /* Image Data Size */ uint32_t ih_load; /* Data Load Address */ uint32_t ih_ep; /* Entry Point Address */ uint32_t ih_dcrc; /* Image Data CRC Checksum */ uint8_t ih_os; /* Operating System */ uint8_t ih_arch; /* CPU architecture */ uint8_t ih_type; /* Image Type */ uint8_t ih_comp; /* Compression Type */ uint8_t ih_name[IH_NMLEN]; /* Image Name */&#125; image_header_t; 12345$ xxd &lt; upgrade_decrypto.bin | more00000000: 2705 1956|d2fc 9955|5b20 b51a|0012 c3a7| &apos;..V...U[ ......00000010: 8006 0000|8006 0000|d695 0fbf|05|05|02|03| ................00000020: 4d49 5053 204f 7065 6e57 7274 204c 696e MIPS OpenWrt Lin00000030: 7578 2d33 2e31 382e 3233 0000 0000 0000 ux-3.18.23...... At the same time, I found an article about firmware encryption, so I think the decryption function maybe inside firmware. Now I am in trouble. Hardware debugI decided to tear down it and start with the hardware. Connect to UART port via USB TTL adapter. Adapter Router GND GND TXD RXD RXD TXD According the doc set speed 115200. Run U-Boot mode Press and hold the reset button Power on the unit (keep holding down the reset button) The 3G/4G led will flash Press reset button for at least: 5 sec. to run web failsafe mode 8 sec. to run U-Boot console 10 sec. to run U-Boot netconsole Release the reset button The 3G/4G led will faintly flash twice Then you are in U-Boot mode Now you can read the data in memory. BusyboxOr we can try to use shell in normal mode. Decrypt firmwareAfter viewing at the Lua web files, I found the shell script for the call. Now I can get decrypt firmware file and duplicate it in a new router of the same model!","categories":[],"tags":[{"name":"Hardware","slug":"Hardware","permalink":"https://timonpeng.com/tags/Hardware/"},{"name":"Reverse engineering","slug":"Reverse-engineering","permalink":"https://timonpeng.com/tags/Reverse-engineering/"},{"name":"Router","slug":"Router","permalink":"https://timonpeng.com/tags/Router/"}]},{"title":"Mosec 2019 badge crack","slug":"mosec-2019-badge-crack","date":"2019-05-30T07:00:00.000Z","updated":"2019-07-28T07:28:24.664Z","comments":true,"path":"mosec-2019-badge-crack/","link":"","permalink":"https://timonpeng.com/mosec-2019-badge-crack/","excerpt":"Turn on the power, convert the handset light to morse code, decode it is M0S8C74.","text":"Turn on the power, convert the handset light to morse code, decode it is M0S8C74. Connect serial port through usb and send code(end with #) to unlock.","categories":[],"tags":[{"name":"Hardware","slug":"Hardware","permalink":"https://timonpeng.com/tags/Hardware/"}]},{"title":"Xiaofang 1s camera downgrade firmware version","slug":"xiaofang-1s-camera-downgrade-firmware-version","date":"2019-01-13T07:00:00.000Z","updated":"2019-07-29T02:00:09.793Z","comments":true,"path":"xiaofang-1s-camera-downgrade-firmware-version/","link":"","permalink":"https://timonpeng.com/xiaofang-1s-camera-downgrade-firmware-version/","excerpt":"Download files with firmware version of 5.6.2.45 here.","text":"Download files with firmware version of 5.6.2.45 here. Rename the firmware file to demo.bin Copy the firmware file to TF cardâ€™s root directory Turn off Xiaofangâ€™s power Insert the TF card into Xiaofang 1s Use pin press and hold the reset button(on the right side of the usb port) Power on the unit (keep holding down the reset button) After waiting for 15 seconds, release the reset button Wait for 5 minutes, if it does not restart automatically, restart from step 3","categories":[],"tags":[{"name":"Hardware","slug":"Hardware","permalink":"https://timonpeng.com/tags/Hardware/"},{"name":"Camera","slug":"Camera","permalink":"https://timonpeng.com/tags/Camera/"}]},{"title":"Shanghai telecom home users replace SDN gateway","slug":"shanghai-telecom-home-users-replace-sdn-gateway","date":"2018-10-01T07:00:00.000Z","updated":"2019-07-28T13:22:36.006Z","comments":true,"path":"shanghai-telecom-home-users-replace-sdn-gateway/","link":"","permalink":"https://timonpeng.com/shanghai-telecom-home-users-replace-sdn-gateway/","excerpt":"Replaced HG2821T-U with ZTE F401. ZTE F401 is the equipment of Shanghai Telecom enterprise users, we can also use it.","text":"Replaced HG2821T-U with ZTE F401. ZTE F401 is the equipment of Shanghai Telecom enterprise users, we can also use it. Get LOID from HG2821T-UConnect to HG2821T-U and request http://192.168.1.1/appapi/getstat/000000, you can get loid from response json data. Configure ZTE F401Connect to ZTE F401 and configure network manually: IPv4 Address: 192.168.1.2 Subnet Mask: 255.255.255.0 Router: 192.168.1.1 Login web anagement interface http://192.168.1.1, username and password both admin. Then configure SN, LOID and password as HG2821T-Uâ€™s LOID. If some random codes in the input box, donâ€™t delete and keep them at the end.","categories":[],"tags":[{"name":"Hardware","slug":"Hardware","permalink":"https://timonpeng.com/tags/Hardware/"}]},{"title":"Display custom image for the rimowa electronic tag","slug":"display-custom-image-for-the-rimowa-electronic-tag","date":"2018-03-28T07:00:00.000Z","updated":"2019-09-07T17:37:54.508Z","comments":true,"path":"display-custom-image-for-the-rimowa-electronic-tag/","link":"","permalink":"https://timonpeng.com/display-custom-image-for-the-rimowa-electronic-tag/","excerpt":"Rimowaâ€™s electronic tag allows you to display your boarding pass (some airlines) or customized picture information on your luggage. It has some input restrictions, but we can show anything now!","text":"Rimowaâ€™s electronic tag allows you to display your boarding pass (some airlines) or customized picture information on your luggage. It has some input restrictions, but we can show anything now! Reverse engineeringPrepare A picture(200*450), if it is colored, it will be automatically displayed in black and white Android phone(installed APP) Traffic proxy tool(Charles, mitmproxy, etc.) Your luggage ##","categories":[],"tags":[{"name":"Hardware","slug":"Hardware","permalink":"https://timonpeng.com/tags/Hardware/"},{"name":"Reverse engineering","slug":"Reverse-engineering","permalink":"https://timonpeng.com/tags/Reverse-engineering/"}]}]}